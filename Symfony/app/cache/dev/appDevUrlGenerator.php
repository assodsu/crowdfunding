<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_comment_thread_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\CommentBundle\\Controller\\ThreadController::showAction',  ),  2 =>   array (    'id' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/thread',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_comment_comment_new' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\CommentBundle\\Controller\\CommentController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment/new',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/thread',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_comment_comment_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\CommentBundle\\Controller\\CommentController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/thread',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_comment_comment_reply' => array (  0 =>   array (    0 => 'id',    1 => 'comment_id',  ),  1 =>   array (    '_controller' => 'CF\\CommentBundle\\Controller\\CommentController::replyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment_id',    ),    1 =>     array (      0 => 'text',      1 => '/comment/reply',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/thread',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_comment_comment_reply_update' => array (  0 =>   array (    0 => 'id',    1 => 'comment_id',  ),  1 =>   array (    '_controller' => 'CF\\CommentBundle\\Controller\\CommentController::replyUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment_id',    ),    2 =>     array (      0 => 'text',      1 => '/comment/reply',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/thread',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_comment_comment_report' => array (  0 =>   array (    0 => 'id',    1 => 'comment_id',  ),  1 =>   array (    '_controller' => 'CF\\CommentBundle\\Controller\\CommentController::reportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment_id',    ),    1 =>     array (      0 => 'text',      1 => '/comment/report',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/thread',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_comment_comment_report_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\CommentBundle\\Controller\\CommentController::reportUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/comment/report',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_site_commentcamarche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\SiteBundle\\Controller\\PagesController::commentcamarcheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment-ca-marche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_site_partenaires' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\SiteBundle\\Controller\\PagesController::partenairesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/partenaires',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_site_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\SiteBundle\\Controller\\PagesController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_site_developpeurs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\SiteBundle\\Controller\\PagesController::developpeursAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/developpeurs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_site_conditions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\SiteBundle\\Controller\\PagesController::conditionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/conditions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_site_apropos' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\SiteBundle\\Controller\\PagesController::aproposAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/a-propos',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_badge_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'CF\\BadgeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_message_add' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MessageBundle\\Controller\\MessageController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/message/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_message_update_ajax' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MessageBundle\\Controller\\MessageController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/message/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_conversation_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\MessageBundle\\Controller\\ConversationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/conversation/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_conversation_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MessageBundle\\Controller\\ConversationController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/conversation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_notification' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\NotificationBundle\\Controller\\NotificationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/connexion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/connexion_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/deconnexion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profil/editer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_projects' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\ProfileController::projectsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profil/projets',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_messages' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\ProfileController::messagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profil/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_badges' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\ProfileController::badgesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profil/badges',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_user_projetsSuivis' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\ProfileController::projetsSuivisAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profil/projets-suivis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_user_projetsSoutenus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\ProfileController::projetsSoutenusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profil/projets-soutenus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_user_projetsFini' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\ProfileController::projetsFiniAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profil/projets-fini',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',    'slug' => '[a-zA-Z-0-9]+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[a-zA-Z-0-9]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/profil/voir',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inscription/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inscription/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/inscription/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inscription/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'association_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\RegistrationAssociationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inscription/association',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'entreprise_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\RegistrationEntrepriseController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inscription/entreprise',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'particulier_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\RegistrationParticulierController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inscription/particulier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inscription_confirmee' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\RegistrationConfirmController::confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inscription/confirmation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profil/modifier-mdp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\PageController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_project' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ProjectController::showAction',  ),  2 =>   array (    '_method' => 'GET',    'slug' => '[a-zA-Z0-9-]+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[a-zA-Z0-9-]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/projet/voir',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_addProjects' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ProjectController::addAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/projet/creer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_participate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ProjectController::participateAction',  ),  2 =>   array (    '_method' => 'GET|POST',    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/participer',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_modifier_projet' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ProjectController::modifierAction',  ),  2 =>   array (    'slug' => '[a-zA-Z0-9-]+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[a-zA-Z0-9-]+',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/projet/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_suivre_projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ProjectController::suivreProjetAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projet/suivre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_not_suivre_projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ProjectController::notSuivreProjetAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projet/stop-suivre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_rediger_actu' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ActualiteController::redigerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projet/mises-a-jours/rediger',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_edit_actu' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ActualiteController::editerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projet/mises-a-jours/editer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_delete_actu' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ActualiteController::supprimerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projet/mises-a-jours/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_rediger_box' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\BoxController::redigerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projet/box/rediger',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_edit_box' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\BoxController::editerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projet/box/editer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_delete_box' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\BoxController::supprimerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projet/box/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_allProjects' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ProjectController::showAllAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/projets/tous',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_updateProjects' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\ProjectController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/projets/tous/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_recherche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\RechercheController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/projets/recherche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cf_main_rechercheUpdate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CF\\MainBundle\\Controller\\RechercheController::updateSearchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/projets/recherche/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::redirectAction',    'route' => 'sonata_admin_dashboard',    'permanent' => 'true',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_retrieve_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:retrieveFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/get-form-field-element',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_append_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:appendFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/append-form-field-element',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_short_object_information' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:getShortObjectDescriptionAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'html|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'html|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/admin/core/get-short-object-description',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_set_object_field_value' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:setObjectFieldValueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/set-object-field-value',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_retrieve_autocomplete_items' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:retrieveAutocompleteItemsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/get-autocomplete-items',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projet_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.projet',    '_sonata_name' => 'admin_cf_main_projet_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/projet/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projet_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.projet',    '_sonata_name' => 'admin_cf_main_projet_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/projet/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projet_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.projet',    '_sonata_name' => 'admin_cf_main_projet_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/projet/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projet_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.projet',    '_sonata_name' => 'admin_cf_main_projet_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projet_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.projet',    '_sonata_name' => 'admin_cf_main_projet_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projet_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.projet',    '_sonata_name' => 'admin_cf_main_projet_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projet_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.projet',    '_sonata_name' => 'admin_cf_main_projet_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/projet/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projetaccueil_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.projet_accueil',    '_sonata_name' => 'admin_cf_main_projetaccueil_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/projetaccueil/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projetaccueil_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.projet_accueil',    '_sonata_name' => 'admin_cf_main_projetaccueil_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/projetaccueil/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projetaccueil_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.projet_accueil',    '_sonata_name' => 'admin_cf_main_projetaccueil_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/projetaccueil/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projetaccueil_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.projet_accueil',    '_sonata_name' => 'admin_cf_main_projetaccueil_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/projetaccueil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projetaccueil_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.projet_accueil',    '_sonata_name' => 'admin_cf_main_projetaccueil_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/projetaccueil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projetaccueil_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.projet_accueil',    '_sonata_name' => 'admin_cf_main_projetaccueil_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/projetaccueil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_projetaccueil_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.projet_accueil',    '_sonata_name' => 'admin_cf_main_projetaccueil_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/projetaccueil/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_tags_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.tags',    '_sonata_name' => 'admin_cf_main_tags_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/tags/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_tags_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.tags',    '_sonata_name' => 'admin_cf_main_tags_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/tags/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_tags_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.tags',    '_sonata_name' => 'admin_cf_main_tags_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/tags/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_tags_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.tags',    '_sonata_name' => 'admin_cf_main_tags_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/tags',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_tags_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.tags',    '_sonata_name' => 'admin_cf_main_tags_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/tags',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_tags_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.tags',    '_sonata_name' => 'admin_cf_main_tags_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/tags',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_tags_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.tags',    '_sonata_name' => 'admin_cf_main_tags_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/tags/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_selecteur_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.selecteur',    '_sonata_name' => 'admin_cf_main_selecteur_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/selecteur/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_selecteur_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.selecteur',    '_sonata_name' => 'admin_cf_main_selecteur_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/selecteur/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_selecteur_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.selecteur',    '_sonata_name' => 'admin_cf_main_selecteur_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/selecteur/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_selecteur_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.selecteur',    '_sonata_name' => 'admin_cf_main_selecteur_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/selecteur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_selecteur_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.selecteur',    '_sonata_name' => 'admin_cf_main_selecteur_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/selecteur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_selecteur_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.selecteur',    '_sonata_name' => 'admin_cf_main_selecteur_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/main/selecteur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_main_selecteur_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.selecteur',    '_sonata_name' => 'admin_cf_main_selecteur_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/main/selecteur/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_notification_notification_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.notif',    '_sonata_name' => 'admin_cf_notification_notification_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/notification/notification/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_notification_notification_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.notif',    '_sonata_name' => 'admin_cf_notification_notification_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/notification/notification/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_notification_notification_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.notif',    '_sonata_name' => 'admin_cf_notification_notification_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/notification/notification/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_notification_notification_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.notif',    '_sonata_name' => 'admin_cf_notification_notification_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/notification/notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_notification_notification_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.notif',    '_sonata_name' => 'admin_cf_notification_notification_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/notification/notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_notification_notification_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.notif',    '_sonata_name' => 'admin_cf_notification_notification_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/notification/notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_notification_notification_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.notif',    '_sonata_name' => 'admin_cf_notification_notification_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/notification/notification/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_association_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.association',    '_sonata_name' => 'admin_cf_user_association_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/association/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_association_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.association',    '_sonata_name' => 'admin_cf_user_association_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/association/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_association_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.association',    '_sonata_name' => 'admin_cf_user_association_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/association/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_association_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.association',    '_sonata_name' => 'admin_cf_user_association_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/user/association',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_association_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.association',    '_sonata_name' => 'admin_cf_user_association_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/user/association',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_association_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.association',    '_sonata_name' => 'admin_cf_user_association_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/user/association',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_association_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.association',    '_sonata_name' => 'admin_cf_user_association_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/association/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_particulier_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.particulier',    '_sonata_name' => 'admin_cf_user_particulier_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/particulier/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_particulier_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.particulier',    '_sonata_name' => 'admin_cf_user_particulier_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/particulier/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_particulier_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.particulier',    '_sonata_name' => 'admin_cf_user_particulier_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/particulier/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_particulier_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.particulier',    '_sonata_name' => 'admin_cf_user_particulier_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/user/particulier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_particulier_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.particulier',    '_sonata_name' => 'admin_cf_user_particulier_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/user/particulier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_particulier_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.particulier',    '_sonata_name' => 'admin_cf_user_particulier_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/user/particulier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_particulier_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.particulier',    '_sonata_name' => 'admin_cf_user_particulier_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/particulier/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_entreprise_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.entreprise',    '_sonata_name' => 'admin_cf_user_entreprise_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/entreprise/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_entreprise_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.entreprise',    '_sonata_name' => 'admin_cf_user_entreprise_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/entreprise/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_entreprise_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.entreprise',    '_sonata_name' => 'admin_cf_user_entreprise_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/entreprise/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_entreprise_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.entreprise',    '_sonata_name' => 'admin_cf_user_entreprise_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/user/entreprise',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_entreprise_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.entreprise',    '_sonata_name' => 'admin_cf_user_entreprise_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/user/entreprise',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_entreprise_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.entreprise',    '_sonata_name' => 'admin_cf_user_entreprise_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/user/entreprise',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_user_entreprise_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.entreprise',    '_sonata_name' => 'admin_cf_user_entreprise_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/user/entreprise/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_badge_badge_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.badge',    '_sonata_name' => 'admin_cf_badge_badge_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/badge/badge/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_badge_badge_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.badge',    '_sonata_name' => 'admin_cf_badge_badge_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/badge/badge/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_badge_badge_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.badge',    '_sonata_name' => 'admin_cf_badge_badge_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/badge/badge/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_badge_badge_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.badge',    '_sonata_name' => 'admin_cf_badge_badge_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/badge/badge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_badge_badge_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.badge',    '_sonata_name' => 'admin_cf_badge_badge_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/badge/badge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_badge_badge_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.badge',    '_sonata_name' => 'admin_cf_badge_badge_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/badge/badge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_badge_badge_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.badge',    '_sonata_name' => 'admin_cf_badge_badge_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/badge/badge/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_comment_comment_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.admin.comment',    '_sonata_name' => 'admin_cf_comment_comment_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/comment/comment/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_comment_comment_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.admin.comment',    '_sonata_name' => 'admin_cf_comment_comment_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/comment/comment/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_comment_comment_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.admin.comment',    '_sonata_name' => 'admin_cf_comment_comment_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/comment/comment/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_comment_comment_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.admin.comment',    '_sonata_name' => 'admin_cf_comment_comment_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/comment/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_comment_comment_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.admin.comment',    '_sonata_name' => 'admin_cf_comment_comment_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/comment/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_comment_comment_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.admin.comment',    '_sonata_name' => 'admin_cf_comment_comment_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/cf/comment/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_cf_comment_comment_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.admin.comment',    '_sonata_name' => 'admin_cf_comment_comment_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cf/comment/comment/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'console' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CoreSphere\\ConsoleBundle\\Controller\\ConsoleController::consoleAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_console/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'console_exec' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'CoreSphere\\ConsoleBundle\\Controller\\ConsoleController::execAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/_console/commands',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
